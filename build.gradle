plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

apply plugin: 'groovy'
//apply plugin: 'io.spring.dependency-management'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly("org.springframework.boot:spring-boot-devtools")

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	// SPOCK TEST
	//testRuntime 'com.h2database:h2'
	testRuntime 'org.postgresql:postgresql:42.2.12'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation("org.spockframework:spock-spring:1.2-groovy-2.5")
}

sourceSets {
	integration {
		groovy.srcDir "$projectDir/src/integration-test/groovy"
		resources.srcDir "$projectDir/src/integration-test/resources"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

test {
	useJUnitPlatform()
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integration.output.classesDirs
	classpath = sourceSets.integration.runtimeClasspath
}

check.dependsOn integrationTest

configurations {
	integrationImplementation.extendsFrom testImplementation
	integrationRuntime.extendsFrom testRuntime
}
